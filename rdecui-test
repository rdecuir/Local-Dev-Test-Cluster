---
# Source: goldilocks-wrapper/charts/goldilocks/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-goldilocks-controller
  namespace: default
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/dashboard-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-goldilocks-dashboard
  namespace: default
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dashboard
---
# Source: goldilocks-wrapper/charts/vpa/templates/admission-controller-service-account.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: release-name-vpa-admission-controller
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
---
# Source: goldilocks-wrapper/charts/vpa/templates/recommender-service-account.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: release-name-vpa-recommender
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/controller-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-goldilocks-controller
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
      - 'apps'
    resources:
      - '*'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - 'batch'
    resources:
      - 'cronjobs'
      - 'jobs'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - ''
    resources:
      - 'namespaces'
      - 'pods'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - 'autoscaling.k8s.io'
    resources:
      - 'verticalpodautoscalers'
    verbs:
      - 'get'
      - 'list'
      - 'create'
      - 'delete'
      - 'update'
  - apiGroups:
      - 'argoproj.io'
    resources:
      - rollouts
    verbs:
      - 'get'
      - 'list'
      - 'watch'
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/dashboard-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-goldilocks-dashboard
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dashboard
rules:
  - apiGroups:
      - 'autoscaling.k8s.io'
    resources:
      - 'verticalpodautoscalers'
    verbs:
      - 'get'
      - 'list'
  - apiGroups:
      - 'apps'
    resources:
      - '*'
    verbs:
      - 'get'
      - 'list'
  - apiGroups:
      - ''
    resources:
      - 'namespaces'
      - 'pods'
    verbs:
      - 'get'
      - 'list'
  - apiGroups:
      - 'argoproj.io'
    resources:
      - rollouts
    verbs:
      - 'get'
      - 'list'
---
# Source: goldilocks-wrapper/charts/vpa/templates/admission-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-admission-controller
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - create
      - update
      - get
      - list
      - watch
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-metrics-reader
rules:
  - apiGroups:
      - "metrics.k8s.io"
    resources:
      - pods
    verbs:
      - get
      - list
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-actor
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
      - patch
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-status-actor
rules:
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers/status
    verbs:
      - get
      - patch
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-checkpoint-actor
rules:
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalercheckpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - delete
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalercheckpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-evictioner
rules:
  - apiGroups:
      - "apps"
      - "extensions"
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-target-reader
rules:
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-status-reader
rules:
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/controller-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-goldilocks-controller
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-goldilocks-controller
subjects:
  - kind: ServiceAccount
    name: release-name-goldilocks-controller
    namespace: default
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/dashboard-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-goldilocks-dashboard
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-goldilocks-dashboard
subjects:
  - kind: ServiceAccount
    name: release-name-goldilocks-dashboard
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/admission-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-admission-controller
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-admission-controller
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-metrics-reader
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-recommender
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-checkpoint-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-checkpoint-actor
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-recommender
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-status-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-status-actor
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-recommender
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-actor
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-recommender
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-target-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-target-reader
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-recommender
    namespace: default
  - kind: ServiceAccount
    name: release-name-vpa-admission-controller
    namespace: default
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-goldilocks-dashboard
  namespace: default
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dashboard
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: goldilocks
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: dashboard
---
# Source: goldilocks-wrapper/charts/vpa/templates/admission-controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-vpa-webhook
spec:
  ports:
    - port: 443
      targetPort: 8000
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-goldilocks-controller
  namespace: default
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: goldilocks
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: goldilocks
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: release-name-goldilocks-controller
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: goldilocks
          image: "us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.13.0"
          imagePullPolicy: Always
          command:
            - /goldilocks
            - controller
            - -v2
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10324
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
---
# Source: goldilocks-wrapper/charts/goldilocks/templates/dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-goldilocks-dashboard
  namespace: default
  labels:
    app.kubernetes.io/name: goldilocks
    helm.sh/chart: goldilocks-9.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dashboard
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: goldilocks
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: goldilocks
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: dashboard
    spec:
      serviceAccountName: release-name-goldilocks-dashboard
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: goldilocks
          image: "us-docker.pkg.dev/fairwinds-ops/oss/goldilocks:v4.13.0"
          imagePullPolicy: Always
          command:
            - /goldilocks
            - dashboard
            - --exclude-containers=linkerd-proxy,istio-proxy
            - -v2
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10324
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
---
# Source: goldilocks-wrapper/charts/vpa/templates/admission-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-vpa-admission-controller
  labels:
    app.kubernetes.io/component: admission-controller
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/name: vpa
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/name: vpa
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-vpa-admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: vpa
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
          imagePullPolicy: Always
          args:
            - --register-webhook=false
            - --webhook-service=release-name-vpa-webhook
            - --client-ca-file=/etc/tls-certs/ca
            - --tls-cert-file=/etc/tls-certs/cert
            - --tls-private-key=/etc/tls-certs/key
          volumeMounts:
            - name: tls-certs
              mountPath: "/etc/tls-certs"
              readOnly: true
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 8944
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits: {}
            requests:
              cpu: 50m
              memory: 200Mi
      hostNetwork: false
      volumes:
        - name: tls-certs
          secret:
            secretName: release-name-vpa-tls-secret
---
# Source: goldilocks-wrapper/charts/vpa/templates/recommender-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-vpa-recommender
  labels:
    app.kubernetes.io/component: recommender
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: recommender
      app.kubernetes.io/name: vpa
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: recommender
        app.kubernetes.io/name: vpa
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-vpa-recommender
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: vpa
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: registry.k8s.io/autoscaling/vpa-recommender:1.0.0
          imagePullPolicy: Always
          args:
            - --pod-recommendation-min-cpu-millicores=15
            - --pod-recommendation-min-memory-mb=100
            - --v=4
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - name: metrics
              containerPort: 8942
              protocol: TCP
          resources:
            limits: {}
            requests:
              cpu: 50m
              memory: 500Mi
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/mutating.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-vpa-webhook-config
  labels:
    app.kubernetes.io/component: admission-controller
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-name-vpa-webhook
      namespace: default
      port: 443
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: vpa.k8s.io
  namespaceSelector: 
    {}
  objectSelector: 
    {}
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  - apiGroups:
    - autoscaling.k8s.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - verticalpodautoscalers
    scope: '*'
  sideEffects: None
  timeoutSeconds: 5
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    "helm.sh/hook": "test"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
  name: release-name-vpa-test
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-vpa-test
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "test"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
rules:
  - apiGroups:
      - "metrics.k8s.io"
    resources:
      - "nodes"
    verbs:
      - list
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    resourceNames:
      - verticalpodautoscalercheckpoints.autoscaling.k8s.io
      - verticalpodautoscalers.autoscaling.k8s.io
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    resourceNames:
      - release-name-vpa-webhook-config
    verbs:
      - get
      - list
      - watch
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-vpa-test
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "test"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-vpa-test
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-test
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-vpa-admission-certgen
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-admission-certgen
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-vpa-test
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "test"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
rules:
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalercheckpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - services
    resourceNames:
      - release-name-vpa-webhook
      - release-name-vpa-tls-secret
    verbs:
      - get
      - list
      - watch
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-vpa-test
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "test"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation,hook-failed"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-vpa-test
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-test
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-vpa-admission-certgen
subjects:
  - kind: ServiceAccount
    name: release-name-vpa-admission-certgen
    namespace: default
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/crds-available.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vpa-test-crds-available
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "10"
spec:
  serviceAccountName:  release-name-vpa-test
  containers:
    - name: test
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 10324
      image: bitnami/kubectl:1.32
      imagePullPolicy: Always
      command: ['kubectl']
      args:
        - get
        - crd
        - verticalpodautoscalercheckpoints.autoscaling.k8s.io
        - verticalpodautoscalers.autoscaling.k8s.io
  restartPolicy: Never
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/create-vpa.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vpa-test-create-vpa
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight": "20"
spec:
  serviceAccountName: release-name-vpa-test
  containers:
    - name: test
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 10324
      image: bitnami/kubectl:1.32
      imagePullPolicy: Always
      command: ['bash']
      args:
        - -c
        - |
          #!/bin/bash

          set -ex
          cat <<EOF | kubectl -n default apply -f -
          apiVersion: autoscaling.k8s.io/v1
          kind: VerticalPodAutoscaler
          metadata:
            name: test-vpa
          spec:
            targetRef:
              apiVersion: "apps/v1"
              kind:       Deployment
              name:       my-app
            updatePolicy:
              updateMode: "Off"
          EOF

          kubectl -n default describe vpa test-vpa
          kubectl -n default delete vpa test-vpa
  restartPolicy: Never
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/metrics.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vpa-test-metrics-api-available
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight": "40"
spec:
  serviceAccountName: release-name-vpa-test
  containers:
    - name: test
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 10324
      image: bitnami/kubectl:1.32
      imagePullPolicy: Always
      command: ['kubectl']
      args:
        - get
        - --raw
        - "/apis/metrics.k8s.io/v1beta1/nodes"
  restartPolicy: Never
---
# Source: goldilocks-wrapper/charts/vpa/templates/tests/webhook.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-vpa-test-webhook-configuration
  labels:
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight": "30"
spec:
  serviceAccountName: release-name-vpa-test
  containers:
    - name: test
      securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10324
      image: bitnami/kubectl:1.32
      imagePullPolicy: Always
      command: ['bash']
      args:
        - -c
        - |
          #!/bin/bash

          set -ex

          # Get service FQDN
          SERVICE=$(kubectl \
            get service \
            -n default \
            release-name-vpa-webhook \
            -o=jsonpath="{.metadata.name}.{.metadata.namespace}.svc:{.spec.ports[0].port}")

          # Get configured FQDN
          WEBHOOK_SERVICE=$(kubectl \
            get mutatingwebhookconfigurations.admissionregistration.k8s.io \
            release-name-vpa-webhook-config \
            -o=jsonpath="{.webhooks[0].clientConfig.service.name}.{.webhooks[0].clientConfig.service.namespace}.svc:{.webhooks[0].clientConfig.service.port}")

          # Get CA bundle
          SECRET_CABUNDLE=$(kubectl \
            get secret \
            -n default \
            release-name-vpa-tls-secret \
            -o=jsonpath="{.data.ca}")

          # Get configured CA bundle
          WEBHOOK_CABUNDLE=$(kubectl \
            get mutatingwebhookconfigurations.admissionregistration.k8s.io \
            release-name-vpa-webhook-config \
            -o=jsonpath="{.webhooks[0].clientConfig.caBundle}")

          # All corresponding values must match
          if [ $SERVICE = $WEBHOOK_SERVICE ]
          then
            echo "$WEBHOOK_SERVICE matches $SERVICE"
            if [ $WEBHOOK_CABUNDLE = $SECRET_CABUNDLE ]
            then
              echo "Webhook CA bundle matches"
              exit 0;
            else
              echo "CA bundle in mutating webhook release-name-vpa-webhook-config does not match secret default/release-name-vpa-tls-secret"
            fi
          else
            echo "Service configured in mutating webhook release-name-vpa-webhook-config is '$WEBHOOK_SERVICE' not '$SERVICE'"
          fi
          exit 1;
  restartPolicy: Never
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-create.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  release-name-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: release-name-vpa-admission-certgen
      labels:
        app.kubernetes.io/component: admission-certgen
        helm.sh/chart: vpa-4.5.0
        app.kubernetes.io/name: vpa
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-vpa-admission-certgen
      containers:
        - name: create
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
          args:
            - create
            - --host=release-name-vpa-webhook,release-name-vpa-webhook.default.svc
            - --namespace=default
            - --secret-name=release-name-vpa-tls-secret
          resources:
            {}
---
# Source: goldilocks-wrapper/charts/vpa/templates/webhooks/jobs/certgen-patch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  release-name-vpa-admission-certgen-patch
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: vpa-4.5.0
    app.kubernetes.io/name: vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: release-name-vpa-admission-certgen-patch
      labels:
        app.kubernetes.io/component: admission-certgen
        helm.sh/chart: vpa-4.5.0
        app.kubernetes.io/name: vpa
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-vpa-admission-certgen
      containers:
        - name: patch
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
          args:
            - patch
            - --webhook-name=release-name-vpa-webhook-config
            - --namespace=default
            - --secret-name=release-name-vpa-tls-secret
            - --patch-validating=false
            - --log-level=debug
          resources:
            {}
